name: Build, Deploy and Notice

on:
  push:
    branches:
      - master

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  # PROJECT_ID: ${{ secrets.}}
  LINE_NOTIFY: ${{ secrets.LINE_NOTIFY_BEARER_TOKEN }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_JACKY_CHAT_ID: ${{secrets.TELEGRAM_JACKY_CHAT_ID}}
  PROJECT_ID: linewebhook-proj
  #
  REGION: asia-east1
  REPOSITORY_NAME: linewebhook
  IMAGE_TAG: latest

#   PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
#   RUN_REGION: us-west1
#   SERVICE_NAME: ${{ secrets.GCP_SERVICE_NAME }}

jobs:
  push_image_to_docker_hub:
    name: Push image to Docker Hub
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      #- name: Extract metadata (tags, labels) for Docker
      #  id: meta
      #  uses: docker/metadata-action@v4.3.0
      #  with:
      #    images: ${{ secrets.DOCKER_USERNAME }}/linewebhook
      #       - name: Build image
      #         run: docker build --tag $DOCKER_USERNAME/$REPOSITORY_NAME:$IMAGE_TAG .
      #
      #       - name: Log in to Docker Hub
      #         run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      #
      #       - name: Push to Docker Hub
      #         run: docker push $DOCKER_USERNAME/$REPOSITORY_NAME:$IMAGE_TAG

      - name: Log in to gcloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v1'
        with:
          service: linewebhook-cloud-run
          image: registry.hub.docker.com/$DOCKER_USERNAME/$REPOSITORY_NAME:IMAGE_TAG

      # - name: Deploy to cloud run
      #   run: |
      #     gcloud run deploy linewebhook-cloud-run \
      #     --region $REGION \
      #     --image registry.hub.docker.com/$DOCKER_USERNAME/$REPOSITORY_NAME:IMAGE_TAG \
      #     --platform "managed" \
      #     --quiet

  deploy_to_cloud_run:
    name: Deploy to cloud run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: echo tags, labels
        run: |
          echo "DOCKER_USERNAME = ${{ $DOCKER_USERNAME }}/${{ $REPOSITORY_NAME }}:${{ $IMAGE_TAG }} =="
          echo "DOCKER_HUB_REPOSITORY = $DOCKER_USERNAME/$REPOSITORY_NAME:$IMAGE_TAG =="
      #       - name: Build Docker image
      #         run: |
      #           docker build . --tag gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA

      #       - name: Setup gcloud CLI
      #         uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      #         with:
      #           service_account_email: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
      #           service_account_key: ${{ secrets.GCP_SERVICE_APPLICATION_CREDENTIALS }}
      #           project_id: ${{ secrets.GCP_PROJECT_ID }}

      #       - name: Configure Docker to use Google Cloud Platform
      #         run: 'gcloud auth configure-docker --quiet'

      #       - name: Push image to Google Cloud Container Registry
      #         run: docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA

      #       - name: Deploy image to Cloud Run
      #         run: |-
      #           gcloud run deploy "$SERVICE_NAME" \
      #             --quiet \
      #             --region "$RUN_REGION" \
      #             --image "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA" \
      #             --platform "managed" \
      #             --allow-unauthenticated

      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y/%m/%d %H:%M')" >> $GITHUB_ENV

      - name: Set top commit message as env variable
        run: echo "TOP_COMMIT_MESSAGE=$(git log --pretty=format:"%s" -1)" >> $GITHUB_ENV

      #     - name: Build and deploy the Docker image
      #       run: |
      #         cd .
      #         docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
      #         heroku container:push web -a $APP_NAME
      #         heroku container:release web -a $APP_NAME

      #- name: Line Notice
      #  run: |
      #    curl -H "Authorization: Bearer $LINE_NOTIFY" \
      #         -d "message=[$NOW] [${GITHUB_SHA::8}] $TOP_COMMIT_MESSAGE" \
      #         https://notify-api.line.me/api/notify
#          curl -X GET "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage?chat_id=$TELEGRAM_JACKY_CHAT_ID&text=佈版完成 ($NOW) $TOP_COMMIT_MESSAGE"
#          curl -H "Authorization: Bearer $LINE_NOTIFY" -d "message=佈版完成 ($NOW) $TOP_COMMIT_MESSAGE" https://notify-api.line.me/api/notify
